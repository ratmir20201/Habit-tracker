from starlette.status import HTTP_201_CREATED, HTTP_400_BAD_REQUEST
from telebot.types import Message

from helpers.auth import AuthenticationHelper
from main import tg_bot


@tg_bot.message_handler(commands=["register"])
def register_new_user(message: Message):
    from handlers import get_username

    tg_bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")
    tg_bot.register_next_step_handler(message, get_username)


def register(message: Message, username: str, email: str, password: str):
    user_data = {
        "telegram_id": message.from_user.id,
        "username": username,
        "email": email,
        "password": password,
    }

    auth_helper = AuthenticationHelper(message)
    status_code = auth_helper.register_user(user_data=user_data)

    if status_code == HTTP_201_CREATED:
        tg_bot.send_message(
            message.chat.id,
            "‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è –≤—Ö–æ–¥–∞.",
        )
    elif status_code == HTTP_400_BAD_REQUEST:
        from handlers import get_username

        tg_bot.send_message(
            message.chat.id,
            "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º –∏–ª–∏ email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.",
        )
        tg_bot.send_message(
            message.chat.id, "üîÅ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.\n\n–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:"
        )
        tg_bot.register_next_step_handler(message, get_username)
