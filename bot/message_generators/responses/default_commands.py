from constants.all_commands import (DEFAULT_COMMANDS, HABITS_COMMANDS,
                                    TRACKING_COMMANDS)

echo_message = "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —è –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã."
hello_message = "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–∏–≤—ã—á–µ–∫."

info_message = (
    "–Ø –ø–æ–º–æ–≥—É –≤–∞–º –≤—ã—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–æ–≤—ã–µ —Ö–æ—Ä–æ—à–∏–µ –ø—Ä–∏–≤—ã—á–∫–∏. –ú—ã –±—É–¥–µ–º –≤–º–µ—Å—Ç–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –≤–∞—à–∏ –¥–µ–π—Å—Ç–≤–∏—è –∏ –∑–∞–º–µ—Ä—è—Ç—å –≤–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å. "
    "–ü–æ–º–Ω–∏—Ç–µ –ª—É—á—à–µ–µ –≤—Ä–µ–º—è —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —ç—Ç–æ —Å–µ–≥–æ–¥–Ω—è."
)


def create_command_descr_text_for_command_help(
    commands: tuple[tuple[str, str]],
) -> str:
    text_commands = "\n".join(
        "/{command} - _{description}_".format(
            command=command,
            description=description,
        )
        for command, description in commands
    )

    return text_commands


def generate_help_message() -> str:
    message_text = "*–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n"
    default_commands = create_command_descr_text_for_command_help(DEFAULT_COMMANDS)
    message_text += default_commands

    message_text += "\n\n*–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø—Ä–∏–≤—ã—á–∫–∞–º–∏:*\n"
    habits_commands = create_command_descr_text_for_command_help(HABITS_COMMANDS)
    message_text += habits_commands

    message_text += "\n\n*–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ç—Ä–µ–∫–∏–Ω–≥–∞ –ø—Ä–∏–≤—ã—á–µ–∫:*\n"
    tracking_commands = create_command_descr_text_for_command_help(TRACKING_COMMANDS)
    message_text += tracking_commands

    return message_text
